buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.11.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '9.11.0'
}

group = 'com.fullcycle.admin.catalogo.infrastructure'


bootJar {
    archiveFileName = 'application.war'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))
    implementation('com.google.cloud:google-cloud-storage:2.26.1')
    implementation('com.google.guava:guava:32.1.2-jre')

    implementation('mysql:mysql-connector-java')

    testRuntimeOnly('com.h2database:h2')

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-amqp')

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.8')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.8')

    implementation('com.fasterxml.jackson.module:jackson-module-afterburner:2.15.2')

    implementation('org.testcontainers:testcontainers:1.17.2')
    implementation('org.testcontainers:mysql:1.17.2')
    implementation('org.testcontainers:junit-jupiter:1.17.2')
    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.amqp:spring-rabbit-test:2.4.4')
    testImplementation('org.flywaydb:flyway-core')
    implementation 'io.vavr:vavr:0.10.3'
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
    cleanDisabled = false
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}

tasks.named("test") {
    useJUnitPlatform()
}

task unitTests(type: Test, group: "verification") {
    useJUnitPlatform {
        includeTags("unitTest")
    }
}
task integrationTests(type: Test, group: "verification") {
    useJUnitPlatform {
        includeTags("integrationTest")
    }
}

task e2eTests(type: Test, group: "verification") {
    useJUnitPlatform {
        includeTags("e2eTest")
    }
}